apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ingress-identity
  namespace: identity
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/proxy-body-size: "500M"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
spec:
  rules:
    - host: meinenghua.com
      http:
        paths:
          - path:
            backend:
              serviceName: cluster-ip-homepage-ui
              servicePort: 8082
    - host: www.meinenghua.com
      http:
        paths:
          - path:
            backend:
              serviceName: cluster-ip-homepage-ui
              servicePort: 8082
    - host: account.meinenghua.com
      http:
        paths:
          - path:
            backend:
              serviceName: cluster-ip-identity-ui
              servicePort: 9100
    - host: api-account.meinenghua.com
      http:
        paths:
          - path:
            backend:
              serviceName: cluster-ip-identity-api
              servicePort: 5200
  tls:
    - hosts:
        - www.meinenghua.com
      secretName: meinenghua.com
    - hosts:
        - account.meinenghua.com
      secretName: meinenghua.com
    - hosts:
        - api-account.meinenghua.com
      secretName: meinenghua.com
    - hosts:
        - meinenghua.com
      secretName: meinenghua.com
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ingress-expert
  namespace: expert
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/proxy-body-size: "500M"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
spec:
  rules:
    - host: api-expert.meinenghua.com
      http:
        paths:
          - path:
            backend:
              serviceName: cluster-ip-expert-api
              servicePort: 7001
    - host: neng.meinenghua.com
      http:
        paths:
          - path:
            backend:
              serviceName: cluster-ip-expert-ui
              servicePort: 8085
    - host: api-approval.meinenghua.com
      http:
        paths:
          - path:
            backend:
              serviceName: cluster-ip-approval-api
              servicePort: 7044
    - host: approval.meinenghua.com
      http:
        paths:
          - path:
            backend:
              serviceName: cluster-ip-approval-ui
              servicePort: 8100
    - host: api-metis.meinenghua.com
      http:
        paths:
          - path:
            backend:
              serviceName: cluster-ip-metis-api
              servicePort: 7046
    - host: metis.meinenghua.com
      http:
        paths:
          - path:
            backend:
              serviceName: cluster-ip-metis-ui
              servicePort: 8200
    - host: reader.meinenghua.com
      http:
        paths:
          - path:
            backend:
              serviceName: cluster-ip-labeling-ui
              servicePort: 8082
    - host: docs-expert.meinenghua.com
      http:
        paths:
          - path:
            backend:
              serviceName: cluster-ip-expert-docs
              servicePort: 3000
    - host: api-interview.meinenghua.com
      http:
        paths:
          - path:
            backend:
              serviceName: cluster-ip-interview-api
              servicePort: 7001
    - host: interview.meinenghua.com
      http:
        paths:
          - path:
            backend:
              serviceName: cluster-ip-interview-ui
              servicePort: 8200
    - host: bao.meinenghua.com
      http:
        paths:
          - path:
            backend:
              serviceName: cluster-ip-poseidon-ui
              servicePort: 8300
    - host: api-poseidon.meinenghua.com
      http:
        paths:
          - path:
            backend:
              serviceName: cluster-ip-poseidon-api
              servicePort: 7066
  tls:
    - hosts:
        - api-expert.meinenghua.com
      secretName: meinenghua.com
    - hosts:
        - neng.meinenghua.com
      secretName: meinenghua.com
    - hosts:
        - api-approval.meinenghua.com
      secretName: meinenghua.com
    - hosts:
        - approval.meinenghua.com
      secretName: meinenghua.com
    - hosts:
        - api-metis.meinenghua.com
      secretName: meinenghua.com
    - hosts:
        - metis.meinenghua.com
      secretName: meinenghua.com
    - hosts:
        - reader.meinenghua.com
      secretName: meinenghua.com
    - hosts:
        - docs-expert.meinenghua.com
      secretName: meinenghua.com
    - hosts:
        - api-interview.meinenghua.com
      secretName: meinenghua.com
    - hosts:
        - interview.meinenghua.com
      secretName: meinenghua.com
    - hosts:
        - bao.meinenghua.com
      secretName: meinenghua.com
    - hosts:
        - api-poseidon.meinenghua.com
      secretName: meinenghua.com
      # kubectl create secret tls meinenghua.com --cert=meinenghua.com_bundle.crt --key=meinenghua.com.key
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ingress-logging
  namespace: logging
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: basic-auth
    nginx.ingress.kubernetes.io/auth-realm: "Authentication Required - kibana"
spec:
  rules:
    - host: kibana.meinenghua.com
      http:
        paths:
          - path:
            backend:
              serviceName: cluster-ip-log-kibana
              servicePort: 5601
  tls:
    - hosts:
        - kibana.meinenghua.com
      secretName: meinenghua.com
# yum install -y httpd-tools
# htpasswd -c auth kibana
# htpasswd生成的文件的秘钥在Ingress规则中添加身份验证。生成的文件必须命名为auth（实际上，这个秘钥有一个key： data.auth），否则入口控制器将返回一个503。
# kubectl create secret generic basic-auth --from-file=auth  -n logging
# kubectl describe secrets basic-auth     -n logging
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: grafana
  namespace: monitoring
  annotations:
    kubernetes.io/ingress.class: "nginx"
spec:
  rules:
    - host: grafana.meinenghua.com
      http:
        paths:
          - path:
            backend:
              serviceName: grafana
              servicePort: 3000
  tls:
    - hosts:
        - grafana.meinenghua.com
      secretName: meinenghua.com

1.Ubuntu1804关闭防火墙命令
sudo ufw disable
2.开启ssh服务
apt-get install openssh-server
systemctl start ssh
3.Ubuntu 1804安装配置k8s
3.1开启数据包转发
echo "net.ipv4.ip_forward=1" >> /etc/sysctl.conf
3.2防火墙修改FORWARD链默认策略
iptables -P FORWARD ACCEPT
3.3禁用swap
swapoff -a
sed -i 's@^/swapfile@#/swapfile@' /etc/fstab
4.修改iptables参数，使得流经网桥的流量也经过iptables/netfilter防火墙
tee /etc/sysctl.d/k8s.conf <<-'EOF'
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
EOF
sysctl --system

当在使用apt-get命令安装软件时，系统提示dpkg was interrupted, you must manually run 'sudo dpkg --configure -a' to correct the problem
说明此时apt进程被占用，或者有安装程序中处于中断中，执行以下命令
rm /var/lib/dpkg/lock 移除对应目录的锁文件
dpkg --configure -a 强制重新配置软件包
apt update     跟新软件源文件

备注:如果在执行apt update时，提示无法获取到公钥，可以执行
sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 871920D1991BC93C


5.安装指定版本docker
5.1获取HTTPS支持
apt-get install apt-transport-https ca-certificates curl software-properties-common
添加docker公共密钥
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
设置版本类型
add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable"



修改的文件在/etc/apt/sources.list
终端执行时可以看到Ubuntu1804对应的版本为bionic
安装执行版本
apt-cache madison docker-ce

apt install docker-ce=5:18.09.3~3-0~ubuntu-xenial

sudo systemctl enable docker

sudo systemctl start docker



6.安装k8s
6.1设置阿里云k8s源
apt-get update && apt-get install -y apt-transport-https

curl https://mirrors.aliyun.com/kubernetes/apt/doc/apt-key.gpg  | apt-key add -
 
cat << EOF > /etc/apt/sources.list.d/kubernetes.list
deb https://mirrors.aliyun.com/kubernetes/apt/ kubernetes-xenial main
EOF 

apt-get update
apt-get install -y kubelet=1.16.3-00 kubeadm=1.16.3-00 kubectl=1.16.3-00 ipvsadm ipset

上传镜像使用公司提供镜像进行安装
cd $kubernetesConfigDir
POD_CIDR="10.96.0.0/12"
sed -i -e "s?192.168.0.0/16?$POD_CIDR?g" calico.yaml

kubeadm init --apiserver-advertise-address $ip --apiserver-bind-port 6443 --kubernetes-version 1.16.3 --pod-network-cidr $POD_CIDR

export KUBECONFIG=/etc/kubernetes/admin.conf

sleep 5
kubectl get nodes

echocolor "apply kubernetes network addon: calico"
kubectl apply -f calico.yaml

sleep 120
echocolor "kubernetes information as below:"
kubectl get nodes
kubectl get pods --all-namespaces

echocolor "Configure cluster to allow assign Pod to master node"
kubectl taint nodes --all node-role.kubernetes.io/master-
sleep 30

echocolor "install nginx ingress"
kubectl apply -f ingress-mandatory.yaml
kubectl apply -f ingress-service-nodeport.yaml
sleep 30
kubectl get pods --all-namespaces -l app.kubernetes.io/name=ingress-nginx
kubectl get svc -n ingress-nginx

echocolor "install nvidia-device-plugin"
kubectl apply -f nvidia-device-plugin.yaml
sleep 30
kubectl get pods --all-namespaces -l name=nvidia-device-plugin-ds